// <auto-generated />
using LoginDBRepo.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoginDBRepo.Migrations
{
    [DbContext(typeof(LoginDBContext))]
    [Migration("20230703143214_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LoginDB.Models.Account", b =>
                {
                    b.Property<int>("IdAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAccount"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAccount");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("LoginDB.Models.AccountRol", b =>
                {
                    b.Property<int>("IdAccountRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAccountRol"), 1L, 1);

                    b.Property<int>("IdAccount")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.HasKey("IdAccountRol");

                    b.HasIndex("IdAccount");

                    b.HasIndex("IdRol");

                    b.ToTable("AccountRol", (string)null);
                });

            modelBuilder.Entity("LoginDB.Models.Module", b =>
                {
                    b.Property<int>("IdModule")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdModule"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdModule");

                    b.ToTable("Module", (string)null);
                });

            modelBuilder.Entity("LoginDB.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("IdRol");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("LoginDB.Models.AccountRol", b =>
                {
                    b.HasOne("LoginDB.Models.Account", "Account")
                        .WithMany("AccountsRoles")
                        .HasForeignKey("IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoginDB.Models.Rol", "Rol")
                        .WithMany("AccountsRols")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("LoginDB.Models.Account", b =>
                {
                    b.Navigation("AccountsRoles");
                });

            modelBuilder.Entity("LoginDB.Models.Rol", b =>
                {
                    b.Navigation("AccountsRols");
                });
#pragma warning restore 612, 618
        }
    }
}
